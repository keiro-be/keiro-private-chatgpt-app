# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - sample-app-github-cd

on:
  push:
    branches:
      - sandbox
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to deploy to"
        type: environment
        required: true
  workflow_call:
    inputs:
      env:
        description: "Environment to deploy to"
        type: string
        required: true
      app-name:
        description: "Name of the Azure Web App"
        type: string
        required: true

jobs:
  get-env:
    name: Determine environment to deploy to
    runs-on: ubuntu-latest
    outputs:
      env-to-use: ${{steps.get-env.outputs.env-to-use }}
    steps:
      - name: Determine env to use
        id: get-env
        shell: bash
        run: |
          if [ ${{ github.event_name}} == 'push' ]; then
            if [ ${{ github.ref_name }} == 'sandbox' ]; then
              echo "env-to-use=sbx" >> "$GITHUB_OUTPUT"
            fi
          else 
            echo "env-to-use=${{ inputs.env }}" >> "$GITHUB_OUTPUT"
          fi
  get-app-name:
    name: Determine app name
    runs-on: ubuntu-latest
    needs: get-env
    environment: ${{ needs.get-env.outputs.env-to-use }}
    outputs:
      app-name: ${{steps.get-app-name.outputs.app-name }}
    steps:
      - name: Determine app name
        id: get-app-name
        shell: bash
        run: |
          if [ ${{ github.event_name}} == 'workflow_call' ]; then
            echo "app-name=${{ inputs.app-name }}" >> "$GITHUB_OUTPUT"
          else
            echo "app-name=${{ vars.AZURE_WEBAPP_NAME }}" >> "$GITHUB_OUTPUT"
          fi

  build-and-deploy:
    name: Build and package
    runs-on: ubuntu-latest
    environment: ${{ needs.get-env.outputs.env-to-use }}
    needs:
      - get-env
      - get-app-name

    steps:
      - uses: actions/checkout@v4
        with:
          repository: keiro-be/keiro-private-chatgpt-app
          ref: main

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Create and start virtual environment
        run: |
          sudo apt install python3.11-venv
          python -m venv --copies antenv
          source antenv/bin/activate
          pip install setuptools
          pip install -r requirements.txt

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ needs.get-app-name.outputs.app-name }}
          slot-name: "Production"
